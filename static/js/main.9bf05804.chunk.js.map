{"version":3,"sources":["components/EmployeeCard/index.js","components/Title/index.js","components/Filter/index.js","App.js","serviceWorker.js","index.js"],"names":["EmployeeCard","props","className","alt","name","src","img","firstName","lastName","email","phone","Title","children","Filter","onSubmit","handleFormSubmit","onChange","handleInputChange","value","type","placeholder","id","App","state","employees","filter","result","removeEmployee","employee","setState","event","target","preventDefault","filterEmployees","term","console","log","response","first","showAll","clearAll","sortByLast","sorted","sort","a","b","last","sortByFirst","onClick","this","handleSelectChange","map","item","picture","large","key","login","salt","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.9bf05804.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction EmployeeCard(props) {\r\n\treturn (\r\n\t\t<div className=\"card\">\r\n\t\t\t<div className=\"img-container\">\r\n\t\t\t\t<img alt={props.name} src={props.img} />\r\n\t\t\t</div>\r\n\t\t\t<div className=\"content\">\r\n\t\t\t\t<ul>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<strong>First Name:</strong> {props.firstName}\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<strong>Last Name:</strong> {props.lastName}\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<strong>Email:</strong> {props.email}\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<strong>Phone:</strong> {props.phone}\r\n\t\t\t\t\t</li>\r\n\t\t\t\t</ul>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default EmployeeCard;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Title(props) {\r\n\treturn <h1 className=\"title\">{props.children}</h1>;\r\n}\r\n\r\nexport default Title;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Filter(props) {\r\n\treturn (\r\n\t\t<div className=\"col-md-4 text-center\">\r\n\t\t\t<form onSubmit={props.handleFormSubmit}>\r\n\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tonChange={props.handleInputChange}\r\n\t\t\t\t\t\tvalue={props.value}\r\n\t\t\t\t\t\tname=\"name\"\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tplaceholder=\"Employee's First Name (Case Sensitive)\"\r\n\t\t\t\t\t\tid=\"name\"\r\n\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary m-2\">\r\n\t\t\t\t\t\tSearch by Name\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Filter;\r\n","import React, { Component } from \"react\";\nimport EmployeeCard from \"./components/EmployeeCard\";\nimport Title from \"./components/Title\";\nimport Filter from \"./components/Filter\";\nimport employees from \"./employees.json\";\nimport \"./App.css\";\n\nclass App extends Component {\n\tstate = {\n\t\temployees,\n\t\tfilter: \"\",\n\t\tname: \"\",\n\t\tresult: [],\n\t};\n\n\tremoveEmployee = (id) => {\n\t\tconst employees = this.state.employees.filter(\n\t\t\t(employee) => employee.id !== id\n\t\t);\n\n\t\tthis.setState({ employees });\n\t};\n\n\thandleInputChange = (event) => {\n\t\tthis.setState({ name: event.target.value });\n\t};\n\n\thandleFormSubmit = (event) => {\n\t\tevent.preventDefault();\n\n\t\tthis.filterEmployees(this.state.name);\n\t};\n\n\tfilterEmployees = (term) => {\n\t\tconsole.log(term);\n\t\tconst response = this.state.employees.filter(\n\t\t\t(employee) => employee.name.first === term\n\t\t);\n\n\t\tthis.setState({ result: response });\n\t};\n\n\tshowAll = () => {\n\t\tthis.setState({ result: this.state.employees });\n\t};\n\n\tclearAll = () => {\n\t\tthis.setState({ result: [] });\n\t};\n\n\tsortByLast = () => {\n\t\tlet sorted = this.state.employees;\n\t\tsorted.sort((a,b) => (a.name.last > b.name.last ) ? 1 : -1)\n\t\tthis.setState({ result: sorted });\n\t};\n\n\tsortByFirst = () => {\n\t\tlet sorted = this.state.employees;\n\t\tsorted.sort((a,b) => (a.name.first > b.name.first ) ? 1 : -1)\n\t\tthis.setState({ result: sorted });\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"container\">\n\t\t\t\t<div className=\"row d-flex justify-content-center p-2\">\n\t\t\t\t\t<Title>Employee Directory</Title>\n\t\t\t\t\t<button className=\"btn btn-success m-2\" onClick={this.showAll}>\n\t\t\t\t\t\tShow all\n\t\t\t\t\t</button>\n\t\t\t\t\t<button className=\"btn btn-danger m-2\" onClick={this.clearAll}>\n\t\t\t\t\t\tClear all\n\t\t\t\t\t</button>\n\t\t\t\t\t<button className=\"btn btn-warning m-2\" onClick={this.sortByFirst}>\n\t\t\t\t\t\tSort by First Name\n\t\t\t\t\t</button>\n\t\t\t\t\t<button className=\"btn btn-warning m-2\" onClick={this.sortByLast}>\n\t\t\t\t\t\tSort by Last Name\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"row d-flex justify-content-center\">\n\t\t\t\t\t<Filter\n\t\t\t\t\t\tvalue={this.state.name}\n\t\t\t\t\t\thandleInputChange={this.handleInputChange}\n\t\t\t\t\t\thandleSelectChange={this.handleSelectChange}\n\t\t\t\t\t\thandleFormSubmit={this.handleFormSubmit}\n\t\t\t\t\t\tshowAll={this.showAll}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t{[...this.state.result].map((item) => (\n\t\t\t\t\t\t<EmployeeCard\n\t\t\t\t\t\t\timg={item.picture.large}\n\t\t\t\t\t\t\tfirstName={item.name.first}\n\t\t\t\t\t\t\tlastName={item.name.last}\n\t\t\t\t\t\t\temail={item.email}\n\t\t\t\t\t\t\tphone={item.phone}\n\t\t\t\t\t\t\tkey={item.login.salt + item.id.name}\n\t\t\t\t\t\t/>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}